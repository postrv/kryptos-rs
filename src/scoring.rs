// scoring.rs

use lazy_static::lazy_static;
use std::collections::{BTreeSet, HashMap, HashSet};

lazy_static! {
    static ref LETTER_FREQUENCIES: HashMap<char, f64> = {
        let mut freq_map = HashMap::new();
        freq_map.insert('A', 0.0817);
        freq_map.insert('B', 0.0150);
        freq_map.insert('C', 0.0278);
        freq_map.insert('D', 0.0425);
        freq_map.insert('E', 0.1270);
        freq_map.insert('F', 0.0223);
        freq_map.insert('G', 0.0202);
        freq_map.insert('H', 0.0609);
        freq_map.insert('I', 0.0697);
        freq_map.insert('J', 0.0015);
        freq_map.insert('K', 0.0077);
        freq_map.insert('L', 0.0403);
        freq_map.insert('M', 0.0241);
        freq_map.insert('N', 0.0675);
        freq_map.insert('O', 0.0751);
        freq_map.insert('P', 0.0193);
        freq_map.insert('Q', 0.0010);
        freq_map.insert('R', 0.0599);
        freq_map.insert('S', 0.0633);
        freq_map.insert('T', 0.0906);
        freq_map.insert('U', 0.0276);
        freq_map.insert('V', 0.0098);
        freq_map.insert('W', 0.0236);
        freq_map.insert('X', 0.0015);
        freq_map.insert('Y', 0.0197);
        freq_map.insert('Z', 0.0007);
        freq_map
    };
static ref BIGRAM_FREQUENCIES: HashMap<&'static str, f64> = {
        let mut freq_map = HashMap::new();
        freq_map.insert("TH", 0.0271);
        freq_map.insert("HE", 0.0203);
        freq_map.insert("IN", 0.0200);
        freq_map.insert("ER", 0.0193);
        freq_map.insert("AN", 0.0169);
        freq_map.insert("RE", 0.0160);
        freq_map.insert("ON", 0.0147);
        freq_map.insert("AT", 0.0145);
        freq_map.insert("EN", 0.0142);
        freq_map.insert("ND", 0.0134);
        freq_map.insert("TI", 0.0134);
        freq_map.insert("ES", 0.0134);
        freq_map.insert("OR", 0.0128);
        freq_map.insert("TE", 0.0120);
        freq_map.insert("OF", 0.0117);
        freq_map.insert("ED", 0.0117);
        freq_map.insert("IS", 0.0113);
        freq_map.insert("IT", 0.0112);
        freq_map.insert("AL", 0.0109);
        freq_map.insert("AR", 0.0107);
        freq_map.insert("ST", 0.0105);
        freq_map.insert("TO", 0.0104);
        freq_map.insert("NT", 0.0104);
        freq_map.insert("NG", 0.0095);
        freq_map.insert("SE", 0.0093);
        freq_map.insert("HA", 0.0093);
        freq_map.insert("AS", 0.0087);
        freq_map.insert("OU", 0.0087);
        freq_map.insert("IO", 0.0083);
        freq_map.insert("LE", 0.0083);
        freq_map.insert("VE", 0.0083);
        freq_map.insert("CO", 0.0079);
        freq_map.insert("ME", 0.0079);
        freq_map.insert("DE", 0.0076);
        freq_map.insert("HI", 0.0076);
        freq_map.insert("RI", 0.0073);
        freq_map.insert("RO", 0.0073);
        freq_map.insert("IC", 0.0070);
        freq_map.insert("NE", 0.0069);
        freq_map.insert("EA", 0.0069);
        freq_map.insert("RA", 0.0069);
        freq_map.insert("CE", 0.0065);
        freq_map.insert("LI", 0.0062);
        freq_map.insert("CH", 0.0060);
        freq_map.insert("LL", 0.0058);
        freq_map.insert("BE", 0.0058);
        freq_map.insert("MA", 0.0057);
        freq_map.insert("SI", 0.0055);
        freq_map.insert("OM", 0.0055);
        freq_map.insert("UR", 0.0054);
        freq_map
    };

    static ref COMMON_WORDS: BTreeSet<&'static str> = {
    let mut word_set = BTreeSet::new();
        word_set.insert("THE");
        word_set.insert("OF");
        word_set.insert("AND");
        word_set.insert("TO");
        word_set.insert("IN");
        word_set.insert("THAT");
        word_set.insert("HE");
        word_set.insert("WAS");
        word_set.insert("FOR");
        word_set.insert("ON");
        word_set.insert("ARE");
        word_set.insert("WITH");
        word_set.insert("AS");
        word_set.insert("HIS");
        word_set.insert("THEY");
        word_set.insert("AT");
        word_set.insert("BE");
        word_set.insert("THIS");
        word_set.insert("FROM");
        word_set.insert("OR");
        word_set.insert("ONE");
        word_set.insert("HAD");
        word_set.insert("BY");
        word_set.insert("WORD");
        word_set.insert("BUT");
        word_set.insert("NOT");
        word_set.insert("WHAT");
        word_set.insert("SOME");
        word_set.insert("WE");
        word_set.insert("CAN");
        word_set.insert("OUT");
        word_set.insert("OTHER");
        word_set.insert("WERE");
        word_set.insert("WHICH");
        word_set.insert("DO");
        word_set.insert("THEIR");
        word_set.insert("TIME");
        word_set.insert("IF");
        word_set.insert("WILL");
        word_set.insert("HOW");
        word_set.insert("SAID");
        word_set.insert("AN");
        word_set.insert("EACH");
        word_set.insert("TELL");
        word_set.insert("DOES");
        word_set.insert("SET");
        word_set.insert("THREE");
        word_set.insert("WANT");
        word_set.insert("AIR");
        word_set.insert("WELL");
        word_set.insert("ALSO");
        word_set.insert("PLAY");
        word_set.insert("SMALL");
        word_set.insert("END");
        word_set.insert("PUT");
        word_set.insert("HOME");
        word_set.insert("READ");
        word_set.insert("HAND");
        word_set.insert("PORT");
        word_set.insert("LARGE");
        word_set.insert("SPELL");
        word_set.insert("ADD");
        word_set.insert("EVEN");
        word_set.insert("LAND");
        word_set.insert("HERE");
        word_set.insert("MUST");
        word_set.insert("BIG");
        word_set.insert("HIGH");
        word_set.insert("SUCH");
        word_set.insert("FOLLOW");
        word_set.insert("ACT");
        word_set.insert("WHY");
        word_set.insert("ASK");
        word_set.insert("MEN");
        word_set.insert("CHANGE");
        word_set.insert("WENT");
        word_set.insert("LIGHT");
        word_set.insert("KIND");
        word_set.insert("OFF");
        word_set.insert("NEED");
        word_set.insert("HOUSE");
        word_set.insert("PICTURE");
        word_set.insert("TRY");
        word_set.insert("US");
        word_set.insert("AGAIN");
        word_set.insert("ANIMAL");
        word_set.insert("POINT");
        word_set.insert("MOTHER");
        word_set.insert("WORLD");
        word_set.insert("NEAR");
        word_set.insert("BUILD");
        word_set.insert("SELF");
        word_set.insert("EARTH");
        word_set.insert("FATHER");
        word_set.insert("ANY");
        word_set.insert("NEW");
        word_set.insert("WORK");
        word_set.insert("PART");
        word_set.insert("TAKE");
        word_set.insert("GET");
        word_set.insert("PLACE");
        word_set.insert("MADE");
        word_set.insert("LIVE");
        word_set.insert("WHERE");
        word_set.insert("AFTER");
        word_set.insert("BACK");
        word_set.insert("LITTLE");
        word_set.insert("ONLY");
        word_set.insert("ROUND");
        word_set.insert("MAN");
        word_set.insert("YEAR");
        word_set.insert("CAME");
        word_set.insert("SHOW");
        word_set.insert("EVERY");
        word_set.insert("GOOD");
        word_set.insert("ME");
        word_set.insert("GIVE");
        word_set.insert("OUR");
        word_set.insert("UNDER");
        word_set.insert("NAME");
        word_set.insert("VERY");
        word_set.insert("THROUGH");
        word_set.insert("JUST");
        word_set.insert("FORM");
        word_set.insert("SENTENCE");
        word_set.insert("GREAT");
        word_set.insert("THINK");
        word_set.insert("SAY");
        word_set.insert("HELP");
        word_set.insert("LOW");
        word_set.insert("LINE");
        word_set.insert("DIFFER");
        word_set.insert("TURN");
        word_set.insert("CAUSE");
        word_set.insert("MUCH");
        word_set.insert("MEAN");
        word_set.insert("BEFORE");
        word_set.insert("MOVE");
        word_set.insert("RIGHT");
        word_set.insert("BOY");
        word_set.insert("OLD");
        word_set.insert("TOO");
        word_set.insert("SAME");
        word_set.insert("SHE");
        word_set.insert("ALL");
        word_set.insert("THERE");
        word_set.insert("WHEN");
        word_set.insert("UP");
        word_set.insert("USE");
        word_set.insert("YOUR");
        word_set.insert("WAY");
        word_set.insert("ABOUT");
        word_set.insert("MANY");
        word_set.insert("THEN");
        word_set.insert("THEM");
        word_set.insert("WRITE");
        word_set.insert("WOULD");
        word_set.insert("LIKE");
        word_set.insert("SO");
        word_set.insert("THESE");
        word_set.insert("HER");
        word_set.insert("LONG");
        word_set.insert("MAKE");
        word_set.insert("THING");
        word_set.insert("SEE");
        word_set.insert("HIM");
        word_set.insert("TWO");
        word_set.insert("HAS");
        word_set.insert("LOOK");
        word_set.insert("MORE");
        word_set.insert("DAY");
        word_set.insert("COULD");
        word_set.insert("GO");
        word_set.insert("COME");
        word_set.insert("DID");
        word_set.insert("NUMBER");
        word_set.insert("SOUND");
        word_set.insert("NO");
        word_set.insert("MOST");
        word_set.insert("PEOPLE");
        word_set.insert("MY");
        word_set.insert("OVER");
        word_set.insert("KNOW");
        word_set.insert("WATER");
        word_set.insert("THAN");
        word_set.insert("CALL");
        word_set.insert("FIRST");
        word_set.insert("WHO");
        word_set.insert("MAY");
        word_set.insert("DOWN");
        word_set.insert("SIDE");
        word_set.insert("BEEN");
        word_set.insert("NOW");
        word_set.insert("FIND");
        word_set.insert("HEAD");
        word_set.insert("STAND");
        word_set.insert("OWN");
        word_set.insert("PAGE");
        word_set.insert("SHOULD");
        word_set.insert("COUNTRY");
        word_set.insert("FOUND");
        word_set.insert("ANSWER");
        word_set.insert("SCHOOL");
        word_set.insert("GROW");
        word_set.insert("STUDY");
        word_set.insert("STILL");
        word_set.insert("LEARN");
        word_set.insert("PLANT");
        word_set.insert("COVER");
        word_set.insert("FOOD");
        word_set.insert("SUN");
        word_set.insert("FOUR");
        word_set.insert("BETWEEN");
        word_set.insert("STATE");
        word_set.insert("KEEP");
        word_set.insert("EYE");
        word_set.insert("NEVER");
        word_set.insert("LAST");
        word_set.insert("LET");
        word_set.insert("THOUGHT");
        word_set.insert("CITY");
        word_set.insert("TREE");
        word_set.insert("CROSS");
        word_set.insert("FARM");
        word_set.insert("HARD");
        word_set.insert("START");
        word_set.insert("MIGHT");
        word_set.insert("STORY");
        word_set.insert("SAW");
        word_set.insert("FAR");
        word_set.insert("SEA");
        word_set.insert("DRAW");
        word_set.insert("LEFT");
        word_set.insert("LATE");
        word_set.insert("RUN");
        word_set.insert("DONT");
        word_set.insert("WHILE");
        word_set.insert("PRESS");
        word_set.insert("CLOSE");
        word_set.insert("NIGHT");
        word_set.insert("REAL");
        word_set.insert("LIFE");
        word_set.insert("FEW");
        word_set.insert("NORTH");
        word_set.insert("OPEN");
        word_set.insert("SEEM");
        word_set.insert("TOGETHER");
        word_set.insert("NEXT");
        word_set.insert("WHITE");
        word_set.insert("CHILDREN");
        word_set.insert("BEGIN");
        word_set.insert("GOT");
        word_set.insert("WALK");
        word_set.insert("EXAMPLE");
        word_set.insert("EASE");
        word_set.insert("PAPER");
        word_set.insert("GROUP");
        word_set.insert("ALWAYS");
        word_set.insert("MUSIC");
        word_set.insert("THOSE");
        word_set.insert("BOTH");
        word_set.insert("MARK");
        word_set.insert("OFTEN");
        word_set.insert("LETTER");
        word_set.insert("UNTIL");
        word_set.insert("MILE");
        word_set.insert("RIVER");
        word_set.insert("CAR");
        word_set.insert("FEET");
        word_set.insert("CARE");
        word_set.insert("SECOND");
        word_set.insert("BOOK");
        word_set.insert("CARRY");
        word_set.insert("TOOK");
        word_set.insert("SCIENCE");
        word_set.insert("EAT");
        word_set.insert("ROOM");
        word_set.insert("FRIEND");
        word_set.insert("BEGAN");
        word_set.insert("IDEA");
        word_set.insert("FISH");
        word_set.insert("MOUNTAIN");
        word_set.insert("STOP");
        word_set.insert("ONCE");
        word_set.insert("BASE");
        word_set.insert("HEAR");
        word_set.insert("HORSE");
        word_set.insert("CUT");
        word_set.insert("SURE");
        word_set.insert("SPI");
        word_set.insert("WATCH");
        word_set.insert("COLOR");
        word_set.insert("FACE");
        word_set.insert("WOOD");
        word_set.insert("MAIN");
        word_set.insert("ENOUGH");
        word_set.insert("PLAIN");
        word_set.insert("SPIES");
        word_set.insert("SPY");
        word_set.insert("DAWN");
        word_set.insert("BERLIN");
        word_set.insert("LIN");
        word_set.insert("BER");
        word_set.insert("NORTH");
        word_set.insert("EAST");
        word_set.insert("SOUTH");
        word_set.insert("WEST");
        word_set.insert("FOLLOW");
        word_set.insert("LEFT");
        word_set.insert("HAND");
        word_set.insert("PATH");
        word_set.insert("EASTNORTHEAST");
        word_set.insert("NORTHEAST");
        word_set.insert("SOUTHEAST");
        word_set.insert("SOUTHWEST");
        word_set.insert("NORTHWEST");
        word_set.insert("UNDER");
        word_set.insert("RIGHT");
        word_set.insert("PARASYSTOLE");
        word_set.insert("LETHEAN");
        word_set.insert("CLOCK");
        word_set.insert("SHADOW");
        word_set.insert("FORTY");
        word_set.insert("IT");
        word_set.insert("IS");
        word_set.insert("BETWEEN");
        word_set.insert("AGENTS");
        word_set.insert("PALIMPSEST");
        word_set.insert("ABSCICCA");
        word_set.insert("KRYPTOS");
        word_set.insert("YOU");
        word_set.insert("LOVE");
        word_set.insert("KGB");
        word_set.insert("FREEDOM");
        word_set.insert("LIBERTY");
        word_set.insert("JUSTICE");
        word_set.insert("TRUTH");
        word_set.insert("HONOR");
        word_set.insert("COURAGE");
        word_set.insert("DUTY");
        word_set.insert("LIES");
        word_set.insert("DECEIT");
        word_set.insert("TREASON");
        word_set.insert("HATE");
        word_set.insert("WAR");
        word_set.insert("PEACE");
        word_set.insert("METER");
        word_set.insert("METERS");
        word_set.insert("SAPPHIRE");
        word_set.insert("RUBY");
        word_set.insert("JACK");
        word_set.insert("TIME");
        word_set.insert("SPACE");
        word_set.insert("EARTH");
        word_set.insert("CIA");
        word_set.insert("FBI");
        word_set.insert("NSA");
        word_set.insert("PROTECT");
        word_set.insert("SERVE");
        word_set.insert("HIS");
        word_set.insert("HISTORY");
        word_set.insert("VICTORY");
        word_set.insert("DEFEAT");
        word_set.insert("WIN");
        word_set.insert("LOSE");
        word_set.insert("VICTOR");
        word_set.insert("HARD");
        word_set.insert("TEST");
        word_set.insert("PHARAOH");
        word_set.insert("EGYPT");
        word_set.insert("JOSEPH");
        word_set.insert("UFO");
        word_set.insert("ALIEN");
        word_set.insert("GOD");
        word_set.insert("NAKED");
        word_set.insert("LORD");
        word_set.insert("LAND");
        word_set.insert("SEA");
        word_set.insert("WEAK");
        word_set.insert("NIL");
        word_set.insert("REB");
        word_set.insert("RUSSIA");
        word_set.insert("RUSSIAN");
        word_set.insert("USA");
        word_set.insert("AMERICA");
        word_set.insert("RUS");
        word_set.insert("SIA");
        word_set.insert("KENNEDY");
        word_set.insert("BUSH");
        word_set.insert("ALIAS");
        word_set.insert("DIG");
        word_set.insert("IRAN");
        word_set.insert("ADVERSE");
        word_set.insert("ADVERSARY");
        word_set.insert("ENEMY");
        word_set.insert("FRIEND");
        word_set.insert("RADIO");
        word_set.insert("DAY");
        word_set.insert("NIGHT");
        word_set.insert("OPEN");
        word_set.insert("BEEN");
        word_set.insert("MAN");
        word_set.insert("NUKE");
        word_set.insert("NUCLEAR");
        word_set.insert("BOMB");
        word_set.insert("EYE");
        word_set.insert("EYES");
        word_set.insert("EAR");
        word_set.insert("EARS");
        word_set.insert("SENSE");
        word_set.insert("STEALTH");
        word_set.insert("STEAL");
        word_set.insert("SELL");
        word_set.insert("HYDROGEN");
        word_set.insert("INTEL");
        word_set.insert("ALPHA");
        word_set.insert("BRAVO");
        word_set.insert("CHARLIE");
        word_set.insert("DELTA");
        word_set.insert("ECHO");
        word_set.insert("FOXTROT");
        word_set.insert("GOLF");
        word_set.insert("HOTEL");
        word_set.insert("INDIA");
        word_set.insert("JULIET");
        word_set.insert("KILO");
        word_set.insert("LIMA");
        word_set.insert("MIKE");
        word_set.insert("NOVEMBER");
        word_set.insert("OSCAR");
        word_set.insert("PAPA");
        word_set.insert("QUEBEC");
        word_set.insert("ROMEO");
        word_set.insert("SIERRA");
        word_set.insert("TANGO");
        word_set.insert("UNIFORM");
        word_set.insert("VICTOR");
        word_set.insert("WHISKEY");
        word_set.insert("XRAY");
        word_set.insert("YANKEE");
        word_set.insert("ZULU");
        word_set.insert("ZERO");
        word_set.insert("ONE");
        word_set.insert("TWO");
        word_set.insert("THREE");
        word_set.insert("FOUR");
        word_set.insert("FIVE");
        word_set.insert("SIX");
        word_set.insert("SEVEN");
        word_set.insert("EIGHT");
        word_set.insert("NINE");
        word_set.insert("TEN");
        word_set.insert("ELEVEN");
        word_set.insert("TWELVE");
        word_set.insert("ENTROPY");
        word_set.insert("HIGH");
        word_set.insert("LOW");
        word_set.insert("TIME");
        word_set.insert("SPACE");
        word_set.insert("SIGNAL");
        word_set.insert("NOISE");
        word_set.insert("SOCIETY");
        word_set.insert("SOCIETIES");
        word_set.insert("SECRET");
        word_set.insert("SECRETS");
        word_set.insert("HIDDEN");
        word_set.insert("LIGHT");
        word_set.insert("DELVE");
        word_set.insert("DARK");
        word_set.insert("HUMAN");
        word_set.insert("BROTHER");
        word_set.insert("DIG");
        word_set.insert("STEEL");
        word_set.insert("WHEN");
        word_set.insert("MENGENLEHREUHR");
        word_set.insert("SETTHEORY");
        word_set.insert("VENN");
        word_set.insert("DIAGRAM");
        word_set.insert("UNION");
        word_set.insert("INTERSECTION");
        word_set.insert("COMPLEMENT");
        word_set.insert("SUBSET");
        word_set.insert("SUPERSET");
        word_set.insert("SYMMETRIC");
        word_set.insert("DIFFERENCE");
        word_set.insert("ELEMENT");
        word_set.insert("BELONGSTO");
        word_set.insert("POWERSET");
        word_set.insert("CARDINALITY");
        word_set.insert("EMPTYSET");
        word_set.insert("UNIVERSALSET");
        word_set.insert("DISJOINT");
        word_set.insert("MUTUALLYEXCLUSIVE");
        word_set.insert("COLLECTIVELY");
        word_set.insert("EXHAUSTIVE");
        word_set.insert("WATER");
        word_set.insert("FLOW");
        word_set.insert("LIQUID");
        word_set.insert("FLUID");
        word_set.insert("STREAM");
        word_set.insert("RIVER");
        word_set.insert("OCEAN");
        word_set.insert("TIDE");
        word_set.insert("WAVE");
        word_set.insert("CURRENT");
        word_set.insert("VORTEX");
        word_set.insert("WHIRLPOOL");
        word_set.insert("EDDY");
        word_set.insert("RIPPLE");
        word_set.insert("CASCADE");
        word_set.insert("FOUNTAIN");
        word_set.insert("SPRING");
        word_set.insert("WELL");
        word_set.insert("AQUIFER");
        word_set.insert("RESERVOIR");
        word_set.insert("CANAL");
        word_set.insert("AQUEDUCT");
        word_set.insert("PIPELINE");
        word_set.insert("SIPHON");
        word_set.insert("PUMP");
        word_set.insert("HYDRO");
        word_set.insert("HYDROLOGY");
        word_set.insert("HYDRODYNAMICS");
        word_set.insert("HYDRAULIC");
        word_set.insert("CORIOLIS");
        word_set.insert("EQUATOR");
        word_set.insert("POLE");
        word_set.insert("SIDES");
        word_set.insert("NORTH");
        word_set
    };

    static ref TRIGRAM_FREQUENCIES: HashMap<&'static str, f64> = {
        let mut freq_map = HashMap::new();
        freq_map.insert("THE", 0.0181);
        freq_map.insert("AND", 0.0073);
        freq_map.insert("ING", 0.0072);
        freq_map.insert("ENT", 0.0042);
        freq_map.insert("ION", 0.0042);
        freq_map.insert("HER", 0.0036);
        freq_map.insert("FOR", 0.0034);
        freq_map.insert("THA", 0.0033);
        freq_map.insert("NTH", 0.0033);
        freq_map.insert("INT", 0.0032);
        freq_map.insert("ERE", 0.0031);
        freq_map.insert("TIO", 0.0031);
        freq_map.insert("TER", 0.0030);
        freq_map.insert("EST", 0.0028);
        freq_map.insert("ERS", 0.0028);
        freq_map.insert("ATI", 0.0026);
        freq_map.insert("HAT", 0.0026);
        freq_map.insert("ATE", 0.0025);
        freq_map.insert("ALL", 0.0025);
        freq_map.insert("ETH", 0.0025);
        freq_map.insert("HIS", 0.0025);
        freq_map.insert("VER", 0.0025);
        freq_map.insert("HES", 0.0024);
        freq_map.insert("ITH", 0.0024);
        freq_map.insert("STH", 0.0023);
        freq_map.insert("OFT", 0.0022);
        freq_map.insert("TTH", 0.0022);
        freq_map.insert("RES", 0.0021);
        freq_map.insert("ONT", 0.0021);
        // ... (Add more trigrams and their frequencies)
        freq_map
    };
}

pub fn score_text(text: &str) -> f64 {
    let mut letter_score = 0.0;
    let mut bigram_score = 0.0;
    let mut trigram_score = 0.0;
    let mut word_score = 0.0;

    let text_length = text.len() as f64;
    let text_upper = text.to_uppercase();

    for c in text_upper.chars() {
        if let Some(&freq) = LETTER_FREQUENCIES.get(&c) {
            letter_score += freq;
        }
    }

    for bigram in text_upper.as_bytes().windows(2) {
        if let Some(&freq) = BIGRAM_FREQUENCIES.get(&std::str::from_utf8(bigram).unwrap()) {
            bigram_score += freq;
        }
    }

    for trigram in text_upper.as_bytes().windows(3) {
        if let Some(&freq) = TRIGRAM_FREQUENCIES.get(&std::str::from_utf8(trigram).unwrap()) {
            trigram_score += freq;
        }
    }

    let words: &[&str] = &text_upper.split_whitespace().collect::<Vec<&str>>();
    let total_words = words.len() as f64;

    for word in words {
        if COMMON_WORDS.contains(word) {
            word_score += 1.0;
        }
    }

    let scaled_word_score = word_score / total_words;

    let known_fragments = vec!["EAST", "BERLIN", "CLOCK", "NORTHEAST"];
    let known_chars: HashSet<char> = known_fragments.iter().flat_map(|s| s.chars()).collect();
    let total_chars = text.len() as f64;
    let known_char_count = text.chars().filter(|c| known_chars.contains(c)).count() as f64;
    let known_char_percentage = known_char_count / total_chars;

    let expected_known_char_percentage = 24.0 / 97.0;
    let percentage_score = 1.0 - (known_char_percentage - expected_known_char_percentage).abs();

    let letter_weight = 0.2;
    let bigram_weight = 0.2;
    let trigram_weight = 0.1;
    let word_weight = 0.3;
    let percentage_weight = 0.2;

    let raw_score = letter_score * letter_weight
        + bigram_score * bigram_weight
        + trigram_score * trigram_weight
        + scaled_word_score * word_weight
        + percentage_score * percentage_weight;

    raw_score
}